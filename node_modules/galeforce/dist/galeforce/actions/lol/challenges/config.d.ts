import Action from '../../action';
import { LeagueRegion } from '../../../../riot-api';
import SubmoduleMap from '../../../interfaces/submodule-map';
import { ChallengeConfigInfoDTO } from '../../../interfaces/dto';
declare const BaseAction: {
    new (...args: any[]): {
        challengeId<K extends import("../../mixins/challenge-id").ChallengeIdChainable & import("../../mixins/executable").Executable>(this: K, challengeId: number): Omit<K, "challengeId">;
    };
} & {
    new (...args: any[]): {
        region<K_1 extends import("../../mixins/region").RegionChainable<LeagueRegion> & import("../../mixins/executable").Executable>(this: K_1, region: LeagueRegion): Omit<K_1, "region">;
    };
} & typeof Action;
export default class GetChallengeConfig extends BaseAction<ChallengeConfigInfoDTO> {
    constructor(submodules: SubmoduleMap);
}
export {};
//# sourceMappingURL=config.d.ts.map